{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js","components/Notification/Notification.module.css"],"names":["module","exports","Section","title","children","Statistic","label","value","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","className","styles","button","type","onClick","name","Notification","message","defaultProps","App","state","handleIncrement","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,OAAS,kC,0JCcZC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,4BAAKD,GACJC,ICUUC,EAbG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAChB,oCACE,2BACGD,EADH,IACU,8BAAOC,MCiBNC,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,yCACA,kBAAC,EAAD,CAAWP,MAAM,OAAOC,MAAOE,IAC/B,kBAAC,EAAD,CAAWH,MAAM,UAAUC,MAAOG,IAClC,kBAAC,EAAD,CAAWJ,MAAM,MAAMC,MAAOI,IAC9B,kBAAC,EAAD,CAAWL,MAAM,QAAQC,MAAOK,IAChC,kBAAC,EAAD,CAAWN,MAAM,oBAAoBC,MAAOM,M,gBC0BjCC,EAjCS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,4BACEC,UAAWC,IAAOC,OAClBC,KAAK,SACLC,QAASL,EACTM,KAAK,QAJP,QAQA,4BACEL,UAAWC,IAAOC,OAClBC,KAAK,SACLC,QAASL,EACTM,KAAK,WAJP,WAQA,4BACEL,UAAWC,IAAOC,OAClBC,KAAK,SACLC,QAASL,EACTM,KAAK,OAJP,S,gBClBEC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,uBAAGP,UAAWC,IAAOM,SAAUA,IAGxCD,EAAaE,aAAe,CAC1BD,QAAS,IAOID,QCVMG,E,2MACnBC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPgB,gBAAkB,YAAiB,IACzBN,EADwB,EAAbO,OACXP,KACR,EAAKQ,UAAS,SAAAC,GAAS,sBACpBT,EAAOS,EAAUT,GAAQ,O,EAI9BU,mBAAqB,WAGnB,OAFcC,OAAOC,OAAO,EAAKP,OACLQ,QAAO,SAACC,EAAK5B,GAAN,OAAgB4B,EAAM5B,IAAO,I,EAIlE6B,gCAAkC,WAAO,IAC/B3B,EAAS,EAAKiB,MAAdjB,KACR,OAAOA,EAAO,EAAI,EAAI4B,KAAKC,MAAc,IAAP7B,EAAc,EAAKsB,uB,wEAG7C,IAAD,EACwBQ,KAAKb,MAA5BjB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,6BACE,kBAAC,EAAD,CAASR,MAAM,yBACb,kBAAC,EAAD,CAAiBY,gBAAiBwB,KAAKZ,kBACtCY,KAAKR,qBAAuB,EAC3B,kBAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,KAAKR,qBACZlB,mBAAoB0B,KAAKH,oCAG3B,kBAAC,EAAD,CAAcb,QAAQ,4B,GAzCDiB,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjD5C,EAAOC,QAAU,CAAC,QAAU,iC","file":"static/js/main.959b63f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1CBqS\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <>\n    <h1>{title}</h1>\n    {children}\n  </>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistic = ({ label, value }) => (\n  <>\n    <p>\n      {label}:<span>{value}</span>\n    </p>\n  </>\n);\n\nStatistic.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Statistic from '../Statistic/Statistic';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <h1>Statistic</h1>\n    <Statistic label=\"Good\" value={good} />\n    <Statistic label=\"Neutral\" value={neutral} />\n    <Statistic label=\"Bad\" value={bad} />\n    <Statistic label=\"Total\" value={total} />\n    <Statistic label=\"Positive feedback\" value={positivePercentage} />\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <>\n    <button\n      className={styles.button}\n      type=\"button\"\n      onClick={onLeaveFeedback}\n      name=\"good\"\n    >\n      Cood\n    </button>\n    <button\n      className={styles.button}\n      type=\"button\"\n      onClick={onLeaveFeedback}\n      name=\"neutral\"\n    >\n      Neutral\n    </button>\n    <button\n      className={styles.button}\n      type=\"button\"\n      onClick={onLeaveFeedback}\n      name=\"bad\"\n    >\n      Bad\n    </button>\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={styles.message}>{message}</p>;\n};\n\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './Section/Section';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Notification from './Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = ({ target }) => {\n    const { name } = target;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const likes = Object.values(this.state);\n    const totalfeedback = likes.reduce((acc, value) => acc + value, 0);\n    return totalfeedback;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return good < 1 ? 0 : Math.round((good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.handleIncrement} />\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1qjLp\"};"],"sourceRoot":""}